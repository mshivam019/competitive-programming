{"Template for CP" : {
  "prefix": "java",
  "body":[
      "import java.util.*;",
      "import java.io.*;",
      
      "public class Main {",
          "$LINE_COMMENT For fast input output",
          "static class FastReader {",
              "BufferedReader br;",
              "StringTokenizer st;",
       
              "public FastReader()",
              "{ try {br = new BufferedReader(",
                  "new FileReader(\"input.txt\"));",
                  "PrintStream out = new PrintStream(new FileOutputStream(\"output.txt\"));",
                  "System.setOut(out);}",
              "catch(Exception e) { br = new BufferedReader(new InputStreamReader(System.in));}",
              "}",
       
              "String next()",
              "{",
                  "while (st == null || !st.hasMoreElements()) {",
                      "try {st = new StringTokenizer(br.readLine());}",
                      "catch (IOException e) {",
                          "e.printStackTrace();}",
                  "}",
                  "return st.nextToken();",
              "}",
       
              "int nextInt() { return Integer.parseInt(next()); }",         
              "long nextLong() { return Long.parseLong(next()); }",         
              "double nextDouble() {return Double.parseDouble(next()); }",
       
              "String nextLine()",
              "{",
                  "String str = \"\";",
                  "try {",
                  "str = br.readLine();",
                  "}",
                  "catch (IOException e) {",
                      "e.printStackTrace();",
                  "}",
                  "return str;",
              "}",
          "}",
          "$LINE_COMMENT end of fast i/o code",
      
          
          "public static void main(String[] args) {",
              "FastReader reader = new FastReader();",
              "$0",
      "}",
  "}"
  ],
  "description": "template for cp in java"
},

"For loop":{
  "prefix" : "forl",
  "body" : [
      "for(int i = 0; i < $0; i++)"
  ]
}                        }